#usda 1.0
(
    defaultPrim = "World"
    doc = "Blender v4.0.0 Alpha"
    endTimeCode = 0
    metersPerUnit = 0.01
    startTimeCode = -1
    upAxis = "Z"
)

def Xform "World" (
    kind = "component"
)
{
    float3 xformOp:scale = (100, 100, 100)
    uniform token[] xformOpOrder = ["xformOp:scale"]

    def Scope "Looks"
    {
        def Material "metal"
        {
            token outputs:displacement.connect = </World/Looks/metal/Shader.outputs:displacement>
            token outputs:surface.connect = </World/Looks/metal/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:clearcoatRoughness = 0.01 (
                    customData = {
                        float default = 0.01
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                color3f inputs:diffuseColor = (1, 0.7243665, 0.20462048) (
                    customData = {
                        float3 default = (0.18, 0.18, 0.18)
                    }
                    hidden = false
                    renderType = "color"
                )
                float inputs:displacement = 0 (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                )
                color3f inputs:emissiveColor = (0, 0, 0) (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "color"
                )
                float inputs:ior = 1.5 (
                    customData = {
                        float default = 1.5
                        dictionary range = {
                            float max = 3.4028235e38
                            float min = 0
                        }
                        dictionary soft_range = {
                            float max = 5
                            float min = 1
                        }
                    }
                    hidden = false
                )
                float inputs:metallic = 1 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                normal3f inputs:normal = (0, 0, 1) (
                    customData = {
                        float3 default = (0, 0, 1)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (-1, -1, -1)
                        }
                    }
                    hidden = false
                )
                float inputs:occlusion = 1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    doc = """This parameter is unused."""
                    hidden = false
                )
                float inputs:opacity = 1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:opacityThreshold = 0 (
                    connectability = "interfaceOnly"
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:roughness = 0.29 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                color3f inputs:specularColor = (0, 0, 0) (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "color"
                )
                int inputs:useSpecularWorkflow = 0 (
                    connectability = "interfaceOnly"
                    customData = {
                        int default = 0
                        dictionary range = {
                            int max = 1
                            int min = 0
                        }
                        string widgetType = "checkBox"
                    }
                    hidden = false
                )
                token outputs:displacement (
                    renderType = "material"
                )
                token outputs:surface (
                    renderType = "material"
                )
            }
        }
    }

    def Scope "Geometry"
    {
        def Mesh "washer" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            float3[] extent = [(-0.0174625, -0.0174625, 0), (0.0174625, 0.0174625, 0.0026102306)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [53, 55, 8, 4, 0, 4, 5, 1, 45, 22, 18, 44, 2, 6, 7, 3, 55, 48, 12, 8, 4, 8, 9, 5, 46, 26, 22, 45, 6, 10, 11, 7, 48, 52, 16, 12, 8, 12, 13, 9, 40, 2, 30, 47, 10, 14, 15, 11, 52, 50, 20, 16, 12, 16, 17, 13, 41, 6, 2, 40, 14, 18, 19, 15, 50, 54, 24, 20, 16, 20, 21, 17, 39, 38, 25, 29, 18, 22, 23, 19, 54, 51, 28, 24, 20, 24, 25, 21, 43, 14, 10, 42, 22, 26, 27, 23, 51, 49, 0, 28, 24, 28, 29, 25, 42, 10, 6, 41, 26, 30, 31, 27, 28, 0, 1, 29, 49, 53, 4, 0, 30, 2, 3, 31, 44, 18, 14, 43, 17, 36, 35, 13, 9, 34, 33, 5, 13, 35, 34, 9, 47, 46, 38, 39, 5, 33, 32, 1, 1, 32, 39, 29, 25, 38, 37, 21, 21, 37, 36, 17, 30, 26, 46, 47, 36, 44, 43, 35, 34, 42, 41, 33, 35, 43, 42, 34, 33, 41, 40, 32, 32, 40, 47, 39, 38, 46, 45, 37, 37, 45, 44, 36, 57, 61, 53, 49, 59, 57, 49, 51, 62, 59, 51, 54, 58, 62, 54, 50, 60, 58, 50, 52, 56, 60, 52, 48, 63, 56, 48, 55, 61, 63, 55, 53, 7, 11, 63, 61, 11, 15, 56, 63, 15, 19, 60, 56, 19, 23, 58, 60, 23, 27, 62, 58, 27, 31, 59, 62, 31, 3, 57, 59, 3, 7, 61, 57]
            rel material:binding = </World/Looks/metal> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(0.70710677, 0.70710677, 0), (-3.0803932e-8, 1, 0), (3.192741e-9, 0.7763821, 0.6302625), (0.54898506, 0.54898506, 0.6302625), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (0.7070799, 0.7070798, 0.008731602), (0.42261973, 0.42261964, -0.8017389), (0.5976744, -1.2248161e-8, -0.8017389), (0.9999619, -3.0803754e-8, 0.0087313), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.0803932e-8, 1, 0), (-0.7071068, 0.70710665, 0), (-0.5489851, 0.5489849, 0.6302625), (3.192741e-9, 0.7763821, 0.6302625), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (1.4375085e-7, 0.9999618, 0.008732004), (7.3489005e-8, 0.59767485, -0.80173856), (0.42261973, 0.42261964, -0.8017389), (0.7070799, 0.7070798, 0.008731602), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7071068, 0.70710665, 0), (-1, -4.1071903e-8, 0), (-0.7763821, -9.566247e-8, 0.6302624), (-0.5489851, 0.5489849, 0.6302625), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (-0.999962, 7.187545e-8, 0.008731268), (-0.5976743, 3.674448e-8, -0.801739), (-0.42261967, 0.42261982, -0.80173874), (-0.70707977, 0.70708, 0.008731651), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, -4.1071903e-8, 0), (-0.7071068, -0.70710665, 0), (-0.5489851, -0.548985, 0.6302625), (-0.7763821, -9.566247e-8, 0.6302624), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (-0.7070799, -0.7070799, 0.008731464), (-0.42261973, -0.42261973, -0.8017388), (-0.5976743, 3.674448e-8, -0.801739), (-0.999962, 7.187545e-8, 0.008731268), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7071068, -0.70710665, 0), (-1.3348371e-7, -1, 0), (-8.610423e-8, -0.7763821, 0.63026255), (-0.5489851, -0.548985, 0.6302625), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-0.70707965, 0.70708007, 0.008731469), (1.7455466e-7, 0.9999619, 0.008731367), (1.0948158e-7, 0.5910779, 0.8066144), (-0.41795504, 0.4179552, 0.8066145), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.3348371e-7, -1, 0), (0.7071066, -0.70710695, 0), (0.54898494, -0.54898524, 0.6302625), (-8.610423e-8, -0.7763821, 0.63026255), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (0.70707995, -0.70707977, 0.008731799), (0.4226198, -0.4226197, -0.8017388), (0, -0.5976748, -0.8017386), (-1.0267918e-8, -0.9999618, 0.008731938), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.7071066, -0.70710695, 0), (1, -1.4375169e-7, 0), (0.7763821, -1.4349374e-7, 0.6302624), (0.54898494, -0.54898524, 0.6302625), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-1.0267918e-8, -0.9999618, 0.008731938), (0, -0.5976748, -0.8017386), (-0.42261973, -0.42261973, -0.8017388), (-0.7070799, -0.7070799, 0.008731464), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1, -1.4375169e-7, 0), (0.70710677, 0.70710677, 0), (0.54898506, 0.54898506, 0.6302625), (0.7763821, -1.4349374e-7, 0.6302624), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.9999619, -3.0803754e-8, 0.0087313), (0.5976744, -1.2248161e-8, -0.8017389), (0.4226198, -0.4226197, -0.8017388), (0.70707995, -0.70707977, 0.008731799), (0.5910779, -4.8658475e-8, 0.8066144), (0.9999619, -6.160752e-8, 0.008731416), (0.70708, -0.7070798, 0.008731147), (0.41795537, -0.41795528, 0.80661434), (3.6493855e-8, -0.59107786, 0.8066144), (2.0535841e-8, -0.9999619, 0.0087313), (-0.7070799, -0.7070799, 0.008731593), (-0.41795507, -0.41795513, 0.80661464), (0.41795537, -0.41795528, 0.80661434), (0.70708, -0.7070798, 0.008731147), (2.0535841e-8, -0.9999619, 0.0087313), (3.6493855e-8, -0.59107786, 0.8066144), (-0.70707977, 0.70708, 0.008731651), (1.4375085e-7, 0.9999618, 0.008732004), (1.7455466e-7, 0.9999619, 0.008731367), (-0.70707965, 0.70708007, 0.008731469), (-0.41795507, -0.41795513, 0.80661464), (-0.7070799, -0.7070799, 0.008731593), (-0.9999619, 8.214337e-8, 0.00873145), (-0.59107786, 4.8658475e-8, 0.8066145), (-0.59107786, 4.8658475e-8, 0.8066145), (-0.9999619, 8.214337e-8, 0.00873145), (-0.70707965, 0.70708007, 0.008731469), (-0.41795504, 0.4179552, 0.8066145), (1.0948158e-7, 0.5910779, 0.8066144), (1.7455466e-7, 0.9999619, 0.008731367), (0.70708, 0.70707977, 0.008731326), (0.4179553, 0.41795513, 0.8066144), (0.4179553, 0.41795513, 0.8066144), (0.70708, 0.70707977, 0.008731326), (0.9999619, -6.160752e-8, 0.008731416), (0.5910779, -4.8658475e-8, 0.8066144), (-0.42261967, 0.42261982, -0.80173874), (7.3489005e-8, 0.59767485, -0.80173856), (1.4375085e-7, 0.9999618, 0.008732004), (-0.70707977, 0.70708, 0.008731651), (0.9999619, -6.160752e-8, 0.008731416), (0.9999619, -3.0803754e-8, 0.0087313), (0.70707995, -0.70707977, 0.008731799), (0.70708, -0.7070798, 0.008731147), (2.0535841e-8, -0.9999619, 0.0087313), (-1.0267918e-8, -0.9999618, 0.008731938), (-0.7070799, -0.7070799, 0.008731464), (-0.7070799, -0.7070799, 0.008731593), (0.70708, -0.7070798, 0.008731147), (0.70707995, -0.70707977, 0.008731799), (-1.0267918e-8, -0.9999618, 0.008731938), (2.0535841e-8, -0.9999619, 0.0087313), (-0.7070799, -0.7070799, 0.008731593), (-0.7070799, -0.7070799, 0.008731464), (-0.999962, 7.187545e-8, 0.008731268), (-0.9999619, 8.214337e-8, 0.00873145), (-0.9999619, 8.214337e-8, 0.00873145), (-0.999962, 7.187545e-8, 0.008731268), (-0.70707977, 0.70708, 0.008731651), (-0.70707965, 0.70708007, 0.008731469), (1.7455466e-7, 0.9999619, 0.008731367), (1.4375085e-7, 0.9999618, 0.008732004), (0.7070799, 0.7070798, 0.008731602), (0.70708, 0.70707977, 0.008731326), (0.70708, 0.70707977, 0.008731326), (0.7070799, 0.7070798, 0.008731602), (0.9999619, -3.0803754e-8, 0.0087313), (0.9999619, -6.160752e-8, 0.008731416), (1, -1.2321573e-7, 0), (0.70710677, 0.70710677, 0), (0.70710677, 0.70710677, 0), (1, -1.4375169e-7, 0), (0.7071066, -0.70710695, 0), (1, -1.2321573e-7, 0), (1, -1.4375169e-7, 0), (0.7071066, -0.70710695, 0), (-1.6428763e-7, -1, 0), (0.7071066, -0.70710695, 0), (0.7071066, -0.70710695, 0), (-1.3348371e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1.6428763e-7, -1, 0), (-1.3348371e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1, 5.1339878e-8, 0), (-0.7071068, -0.70710665, 0), (-0.7071068, -0.70710665, 0), (-1, -4.1071903e-8, 0), (-0.70710677, 0.70710677, 0), (-1, 5.1339878e-8, 0), (-1, -4.1071903e-8, 0), (-0.7071068, 0.70710665, 0), (-6.1607864e-8, 1, 0), (-0.70710677, 0.70710677, 0), (-0.7071068, 0.70710665, 0), (-3.0803932e-8, 1, 0), (0.70710677, 0.70710677, 0), (-6.1607864e-8, 1, 0), (-3.0803932e-8, 1, 0), (0.70710677, 0.70710677, 0), (0.54898506, 0.54898506, -0.6302625), (-4.7831243e-8, 0.7763821, -0.6302624), (-6.1607864e-8, 1, 0), (0.70710677, 0.70710677, 0), (-4.7831243e-8, 0.7763821, -0.6302624), (-0.5489851, 0.54898506, -0.6302625), (-0.70710677, 0.70710677, 0), (-6.1607864e-8, 1, 0), (-0.5489851, 0.54898506, -0.6302625), (-0.7763821, 4.7831236e-8, -0.6302624), (-1, 5.1339878e-8, 0), (-0.70710677, 0.70710677, 0), (-0.7763821, 4.7831236e-8, -0.6302624), (-0.5489851, -0.548985, -0.6302625), (-0.7071068, -0.70710665, 0), (-1, 5.1339878e-8, 0), (-0.5489851, -0.548985, -0.6302625), (-1.2754997e-7, -0.7763821, -0.6302624), (-1.6428763e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1.2754997e-7, -0.7763821, -0.6302624), (0.54898494, -0.54898524, -0.6302625), (0.7071066, -0.70710695, 0), (-1.6428763e-7, -1, 0), (0.54898494, -0.54898524, -0.6302625), (0.7763821, -1.11606234e-7, -0.6302624), (1, -1.2321573e-7, 0), (0.7071066, -0.70710695, 0), (0.7763821, -1.11606234e-7, -0.6302624), (0.54898506, 0.54898506, -0.6302625), (0.70710677, 0.70710677, 0), (1, -1.2321573e-7, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0174625, 0, 0.0026102306), (0.0071437503, 0, 0.0026102306), (0.007120958, -1.9543256e-12, 0), (0.0174625, 0, 0), (0.012347851, 0.012347853, 0.0026102306), (0.005051394, 0.0050513945, 0.0026102306), (0.0050352775, 0.0050352784, 0), (0.012347851, 0.012347853, 0), (1.3183821e-9, 0.0174625, 0.0026102306), (5.3933813e-10, 0.0071437503, 0.0026102306), (5.3657e-10, 0.0071209585, 0), (1.3183821e-9, 0.0174625, 0), (-0.012347855, 0.012347848, 0.0026102306), (-0.0050513954, 0.005051393, 0.0026102306), (-0.0050352793, 0.005035277, 0), (-0.012347855, 0.012347848, 0), (-0.0174625, 1.5266202e-9, 0.0026102306), (-0.0071437503, 6.245265e-10, 0.0026102306), (-0.007120958, 6.205796e-10, 0), (-0.0174625, 1.5266202e-9, 0), (-0.012347855, -0.012347848, 0.0026102306), (-0.0050513954, -0.005051393, 0.0026102306), (-0.0050352793, -0.005035277, 0), (-0.012347855, -0.012347848, 0), (1.3183821e-9, -0.0174625, 0.0026102306), (5.3933813e-10, -0.0071437503, 0.0026102306), (5.3657e-10, -0.0071209585, 0), (1.3183821e-9, -0.0174625, 0), (0.012347845, -0.012347858, 0.0026102306), (0.0050513917, -0.0050513973, 0.0026102306), (0.0050352756, -0.0050352807, 0), (0.012347845, -0.012347858, 0), (0.007139852, -3.3429254e-13, 0.0021637438), (0.0050486373, 0.0050486377, 0.0021637438), (5.388646e-10, 0.007139852, 0.0021637438), (-0.0050486387, 0.0050486363, 0.0021637438), (-0.007139852, 6.2385136e-10, 0.0021637438), (-0.0050486387, -0.0050486363, 0.0021637438), (5.388646e-10, -0.007139852, 0.0021637438), (0.005048635, -0.0050486405, 0.0021637438), (0.007123917, -1.7006045e-12, 0.0003388743), (0.0050373697, 0.0050373706, 0.0003388743), (5.369294e-10, 0.0071239173, 0.0003388743), (-0.0050373715, 0.005037369, 0.0003388743), (-0.007123917, 6.21092e-10, 0.0003388743), (-0.0050373715, -0.005037369, 0.0003388743), (5.369294e-10, -0.0071239173, 0.0003388743), (0.005037368, -0.005037373, 0.0003388743), (-0.012347855, 0.012347848, 0.0024006083), (0.0174625, 0, 0.0024006083), (-0.012347855, -0.012347848, 0.0024006083), (0.012347845, -0.012347858, 0.0024006083), (-0.0174625, 1.5266202e-9, 0.0024006083), (0.012347851, 0.012347853, 0.0024006083), (1.3183821e-9, -0.0174625, 0.0024006083), (1.3183821e-9, 0.0174625, 0.0024006083), (-0.012347855, 0.012347848, 0.0001900593), (0.0174625, 0, 0.0001900593), (-0.012347855, -0.012347848, 0.0001900593), (0.012347845, -0.012347858, 0.0001900593), (-0.0174625, 1.5266202e-9, 0.0001900593), (0.012347851, 0.012347853, 0.0001900593), (1.3183821e-9, -0.0174625, 0.0001900593), (1.3183821e-9, 0.0174625, 0.0001900593)]
            bool[] primvars:sharp_face = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:st = [(0.625, 0.63989735), (0.75, 0.63989735), (0.75, 0.6666667), (0.625, 0.6666667), (0.5, 0.6666667), (0.625, 0.6666667), (0.625, 0.8333333), (0.5, 0.8333333), (0.12500045, 0.253217), (0.125, 0.16666667), (0, 0.16666667), (0.0000110580395, 0.25321698), (0.5, 0.16666667), (0.625, 0.16666667), (0.625, 0.33333334), (0.5, 0.33333334), (0.75, 0.63989735), (0.875, 0.63989735), (0.875, 0.6666667), (0.75, 0.6666667), (0.625, 0.6666667), (0.75, 0.6666667), (0.75, 0.8333333), (0.625, 0.8333333), (0.25, 0.25321698), (0.25, 0.16666667), (0.125, 0.16666667), (0.12500045, 0.253217), (0.625, 0.16666667), (0.75, 0.16666667), (0.75, 0.33333334), (0.625, 0.33333334), (0.875, 0.63989735), (1, 0.63989735), (1, 0.6666667), (0.875, 0.6666667), (0.75, 0.6666667), (0.875, 0.6666667), (0.875, 0.8333333), (0.75, 0.8333333), (0.5, 0.25321692), (0.5, 0.16666667), (0.375, 0.16666667), (0.37500003, 0.25321698), (0.75, 0.16666667), (0.875, 0.16666667), (0.875, 0.33333334), (0.75, 0.33333334), (0, 0.63989735), (0.125, 0.63989735), (0.125, 0.6666667), (0, 0.6666667), (0.875, 0.6666667), (1, 0.6666667), (1, 0.8333333), (0.875, 0.8333333), (0.62500006, 0.25321695), (0.625, 0.16666667), (0.5, 0.16666667), (0.5, 0.25321692), (0.875, 0.16666667), (1, 0.16666667), (1, 0.33333334), (0.875, 0.33333334), (0.125, 0.63989735), (0.25, 0.63989735), (0.25, 0.6666667), (0.125, 0.6666667), (0, 0.6666667), (0.125, 0.6666667), (0.125, 0.8333333), (0, 0.8333333), (0.37500006, 0.71929836), (0.25, 0.71929824), (0.25, 0.8333333), (0.375, 0.8333333), (0, 0.16666667), (0.125, 0.16666667), (0.125, 0.33333334), (0, 0.33333334), (0.25, 0.63989735), (0.375, 0.63989735), (0.375, 0.6666667), (0.25, 0.6666667), (0.125, 0.6666667), (0.25, 0.6666667), (0.25, 0.8333333), (0.125, 0.8333333), (0.8749995, 0.25321698), (0.875, 0.16666667), (0.75, 0.16666667), (0.75000006, 0.25321698), (0.125, 0.16666667), (0.25, 0.16666667), (0.25, 0.33333334), (0.125, 0.33333334), (0.375, 0.63989735), (0.5, 0.63989735), (0.5, 0.6666667), (0.375, 0.6666667), (0.25, 0.6666667), (0.375, 0.6666667), (0.375, 0.8333333), (0.25, 0.8333333), (0.75000006, 0.25321698), (0.75, 0.16666667), (0.625, 0.16666667), (0.62500006, 0.25321695), (0.25, 0.16666667), (0.375, 0.16666667), (0.375, 0.33333334), (0.25, 0.33333334), (0.375, 0.6666667), (0.5, 0.6666667), (0.5, 0.8333333), (0.375, 0.8333333), (0.5, 0.63989735), (0.625, 0.63989735), (0.625, 0.6666667), (0.5, 0.6666667), (0.375, 0.16666667), (0.5, 0.16666667), (0.5, 0.33333334), (0.375, 0.33333334), (0.99998885, 0.25321695), (1, 0.16666667), (0.875, 0.16666667), (0.8749995, 0.25321698), (1, 0.8333333), (1.0000197, 0.71929824), (0.875, 0.7192983), (0.875, 0.8333333), (0.75, 0.8333333), (0.75, 0.71929824), (0.625, 0.71929836), (0.625, 0.8333333), (0.875, 0.8333333), (0.875, 0.7192983), (0.75, 0.71929824), (0.75, 0.8333333), (0.37500003, 0.25321698), (0.25, 0.25321698), (0.25, 0.71929824), (0.37500006, 0.71929836), (0.625, 0.8333333), (0.625, 0.71929836), (0.5, 0.7192983), (0.5, 0.8333333), (0.5, 0.8333333), (0.5, 0.7192983), (0.37500006, 0.71929836), (0.375, 0.8333333), (0.25, 0.8333333), (0.25, 0.71929824), (0.125, 0.71929836), (0.125, 0.8333333), (0.125, 0.8333333), (0.125, 0.71929836), (-0.00001968717, 0.71929824), (0, 0.8333333), (0.375, 0.16666667), (0.25, 0.16666667), (0.25, 0.25321698), (0.37500003, 0.25321698), (1.0000197, 0.71929824), (0.99998885, 0.25321695), (0.8749995, 0.25321698), (0.875, 0.7192983), (0.75, 0.71929824), (0.75000006, 0.25321698), (0.62500006, 0.25321695), (0.625, 0.71929836), (0.875, 0.7192983), (0.8749995, 0.25321698), (0.75000006, 0.25321698), (0.75, 0.71929824), (0.625, 0.71929836), (0.62500006, 0.25321695), (0.5, 0.25321692), (0.5, 0.7192983), (0.5, 0.7192983), (0.5, 0.25321692), (0.37500003, 0.25321698), (0.37500006, 0.71929836), (0.25, 0.71929824), (0.25, 0.25321698), (0.12500045, 0.253217), (0.125, 0.71929836), (0.125, 0.71929836), (0.12500045, 0.253217), (0.0000110580395, 0.25321698), (-0.00001968717, 0.71929824), (0.5, 0.35760444), (0.625, 0.35760444), (0.625, 0.63989735), (0.5, 0.63989735), (0.375, 0.35760444), (0.5, 0.35760444), (0.5, 0.63989735), (0.375, 0.63989735), (0.25, 0.35760444), (0.375, 0.35760444), (0.375, 0.63989735), (0.25, 0.63989735), (0.125, 0.35760447), (0.25, 0.35760444), (0.25, 0.63989735), (0.125, 0.63989735), (0, 0.35760444), (0.125, 0.35760447), (0.125, 0.63989735), (0, 0.63989735), (0.875, 0.3576044), (1, 0.3576044), (1, 0.63989735), (0.875, 0.63989735), (0.75, 0.35760447), (0.875, 0.3576044), (0.875, 0.63989735), (0.75, 0.63989735), (0.625, 0.35760444), (0.75, 0.35760447), (0.75, 0.63989735), (0.625, 0.63989735), (0.625, 0.33333334), (0.75, 0.33333334), (0.75, 0.35760447), (0.625, 0.35760444), (0.75, 0.33333334), (0.875, 0.33333334), (0.875, 0.3576044), (0.75, 0.35760447), (0.875, 0.33333334), (1, 0.33333334), (1, 0.3576044), (0.875, 0.3576044), (0, 0.33333334), (0.125, 0.33333334), (0.125, 0.35760447), (0, 0.35760444), (0.125, 0.33333334), (0.25, 0.33333334), (0.25, 0.35760444), (0.125, 0.35760447), (0.25, 0.33333334), (0.375, 0.33333334), (0.375, 0.35760444), (0.25, 0.35760444), (0.375, 0.33333334), (0.5, 0.33333334), (0.5, 0.35760444), (0.375, 0.35760444), (0.5, 0.33333334), (0.625, 0.33333334), (0.625, 0.35760444), (0.5, 0.35760444)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "catmullClark"
            custom string userProperties:blenderName:data = "washer"
        }
    }
}

